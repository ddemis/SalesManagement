@model SM.Web.Models.Districts.DistrictSettingsModel

using System.Linq;
@{
    ViewBag.Title = "Settings";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Settings</h2>

<p>
  
</p>
@using (Html.BeginForm("Settings", "Districts", FormMethod.Post))
{
    @Html.HiddenFor(m => m.DistrictId)
    <table class="table">
        <tr>
            <th>
               @Html.DisplayNameFor(model => model.SalesManDetailsModel[0].SalesManId)
            </th>
            <th>
               @Html.DisplayNameFor(model => model.SalesManDetailsModel[0].FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SalesManDetailsModel[0].LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SalesManDetailsModel[0].RepsonsabilityType)
            </th>
            <th></th>
        </tr>

    @for (var i= 0; i < Model.SalesManDetailsModel.Count; i++)
    {
        <tr>
            <td>
                @Html.HiddenFor(m => m.SalesManDetailsModel[i].SalesManId)
                @Html.HiddenFor(m => m.SalesManDetailsModel[i].DistrictId)
                @Html.DisplayFor(m => m.SalesManDetailsModel[i].SalesManId)
            </td>
            <td>
                @Html.DisplayFor(m => m.SalesManDetailsModel[i].FirstName)
            </td>
            <td>
                @Html.DisplayFor(m => m.SalesManDetailsModel[i].LastName)
            </td>
            <td>



                @*@Html.DropDownListFor(modelItem => item.FirstName, new List<SelectListItem>
                   { new SelectListItem{Text="Male", Value="M"},
                     new SelectListItem{Text="Female", Value="F"}}, "Please select")*@


                @*@Html.DisplayFor(modelItem => item.RepsonsabilityType)*@
                @{ 
                    if (Model.SalesManDetailsModel[i].DistrictId == Model.DistrictId) {
                        @Html.DropDownListFor(m => m.SalesManDetailsModel[i].RepsonsabilityType, EnumHelper.GetSelectList(typeof(SM.Web.Models.SalesMen.SalesManResponsabilityTypes), Model.SalesManDetailsModel[i].RepsonsabilityType))
                    }
                    else
                    {
                        @Html.DropDownListFor(m => m.SalesManDetailsModel[i].RepsonsabilityType, EnumHelper.GetSelectList(typeof(SM.Web.Models.SalesMen.SalesManResponsabilityTypes), SM.Web.Models.SalesMen.SalesManResponsabilityTypes.None))
                    }
                }

                @*@{string option = modelItem => item.RepsonsabilityType }
                @Html.DropDownList("name", EnumHelper.GetSelectList(typeof(SM.Web.Models.SalesMen.SalesManResponsabilityTypes)), );*@

                @*@Html.DropDownList("MyType", EnumHelper.GetSelectList(typeof(SM.Web.Models.SalesMen.SalesManResponsabilityTypes)), "Select",  new { @class = "form-control" })*@
                @*@Html.RadioButtonFor(item =>  SM.Web.Models.SalesMen.SalesManResponsabilityTypes.Primary) @SM.Web.Models.SalesMen.SalesManResponsabilityTypes.Primary.ToString()
                @Html.RadioButtonFor(item => item.RepsonsabilityType, SM.Web.Models.SalesMen.SalesManResponsabilityTypes.Secondary) @SM.Web.Models.SalesMen.SalesManResponsabilityTypes.Secondary.ToString()*@
               @* @Html.DisplayFor(modelItem => item.RepsonsabilityType)*@
            </td>
            @*<td>
                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
            </td>*@

            <td>
                
            </td>
                
        </tr>
    }

    </table>

    <hr>
    
    <input type="submit" value="Submit"/>
}